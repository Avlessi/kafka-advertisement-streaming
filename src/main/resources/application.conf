kafka-producer {
  client_id = "ad-producer"
  bootstrap.servers = "localhost:9092"
  acks = "1"
  retries = "0"
  key.serializer = "org.apache.kafka.common.serialization.StringSerializer"
  value.serializer = "io.confluent.kafka.serializers.KafkaAvroSerializer"
  schema.registry.url = "http://localhost:8081"
}

kafka-consumer {
  client_id = "ad-consumer"
  bootstrap.servers = "localhost:9092"
  key.serializer = "org.apache.kafka.common.serialization.StringSerializer"
  value.serializer = "io.confluent.kafka.serializers.KafkaAvroSerializer"
  schema.registry.url = "http://localhost:8081"
}

kafka {
  client_id = "advertisement-stream-app"
  bootstrap.servers = "localhost:9092"
  key.serializer = "org.apache.kafka.common.serialization.StringSerializer"
  value.serializer = "io.confluent.kafka.serializers.KafkaAvroSerializer"
  schema.registry.url = "http://localhost:8081"
}

ad-partner {
  topic = "ad-partner-input-topic"
}

ad-announcement {
  topic = "ad-announcement-input-topic"
}

ad-client {
  topic = "ad-client-input-topic"
}

ad-rule {
  topic = "ad-rule-input-topic"
}

output {
  topic = "ad-client-announcement-output-topic"
}

script {
  recreateTopics = "/Users/PC/Documents/recreateTopics.sh"
}

mongo {
  db = "kafkaconnect"
  collection = "kafkatopic"
}